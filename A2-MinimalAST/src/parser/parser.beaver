%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, TYPE, LB, RB, LP, RP, NUM, EQ, SC;

%typeof program = "Program";
%typeof funcList = "List";
%typeof func = "Func";
%typeof statList = "List";
%typeof stat = "Stat";
%typeof use = "Use";
%typeof decl = "Decl";

%goal program;

program = funcList.a 							{: System.out.println("PROG"); return new Program(a); :} ;

funcList =
		  func.a 								{: return new List().add(a);:}
		| funcList.a func.b 					{: return a.add(b); 		:}
		;

func = 
		TYPE ID.a LP RP LB statList.b RB 		{:System.out.println("FUNC"); return new Func(a,b);  :}
		;

statList =
		  stat.a 								{: return new List().add(a);:}
		| statList.a stat.b 					{: return a.add(b); 		:}
		;

stat = 
		decl
		| use
		;

decl = 
		TYPE ID.a SC							{: return new Decl(a);  :}
		;

use = 
		ID.a EQ NUM.b SC						{: return new Use(a,b);  :}
		| ID.a EQ ID.b SC						{: return new Use(a,b);  :}
		;
