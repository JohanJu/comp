aspect NameAnalysis {
	syn IdDecl IdUse.decl() = lookup(getID(),this);
	inh IdDecl IdUse.lookup(String name, Object o);
	syn Func Fcall.decl() = Flookup(getID());
	inh Func Fcall.Flookup(String name);
	
	eq If.getStat().lookup(String name, Object o) {
		IdDecl decl = localLookup(name, o);
		return !decl.isUnknown() ? decl : lookup(name, this);
	}
	eq Else.getStat().lookup(String name, Object o) {
		IdDecl decl = localLookup(name, o);
		return !decl.isUnknown() ? decl : lookup(name, this);
	}
	eq While.getStat().lookup(String name, Object o) {
		IdDecl decl = localLookup(name, o);
		return !decl.isUnknown() ? decl : lookup(name, this);
	}
	eq Func.getStats().lookup(String name, Object o) {
		IdDecl decl = localLookup(name, o);
		return decl;
	}
	eq Func.getArgs().lookup(String name, Object o) {
		IdDecl decl = localLookup(name, o);
		return decl;
	}

	syn IdDecl If.localLookup(String name, Object o) {
		for (int i = 0; i <= getNumStat()-1; i++) {
			if (getStat(i) instanceof IdDecl && ((IdDecl)getStat(i)).getID().equals(name)) {
				return ((IdDecl)getStat(i));
			}
			if (getStat(i) == o) {
				return unknownDecl();
			}
		}
		return unknownDecl();
	}
	syn IdDecl Else.localLookup(String name, Object o) {
		for (int i = 0; i <= getNumStat()-1; i++) {
			if (getStat(i) instanceof IdDecl && ((IdDecl)getStat(i)).getID().equals(name)) {
				return ((IdDecl)getStat(i));
			}
			if (getStat(i) == o) {
				return unknownDecl();
			}
		}
		return unknownDecl();
	}
	syn IdDecl While.localLookup(String name, Object o) {
		for (int i = 0; i <= getNumStat()-1; i++) {
			if (getStat(i) instanceof IdDecl && ((IdDecl)getStat(i)).getID().equals(name)) {
				return ((IdDecl)getStat(i));
			}
			if (getStat(i) == o) {
				return unknownDecl();
			}
		}
		return unknownDecl();
	}
	syn IdDecl Func.localLookup(String name, Object o) {
		for (int i = 0; i <= getNumArgs()-1; i++) {
			if (getArgs(i) instanceof IdDecl && ((IdDecl)getArgs(i)).getID().equals(name)) {
				return ((IdDecl)getArgs(i));
			}
		}
		for (int i = 0; i <= getNumStats()-1; i++) {
			if (getStats(i) instanceof IdDecl && ((IdDecl)getStats(i)).getID().equals(name)) {
				return ((IdDecl)getStats(i));
			}
			if (getStats(i) == o) {
				return unknownDecl();
			}
		}
		return unknownDecl();
	}

	eq Ret.getExpr().lookup(String name, Object o) = lookup(name, this);
	eq Assi.getExpr().lookup(String name, Object o) = lookup(name, this);

	eq Program.getChild().Flookup(String name){
		//todo
		for(Func f : predefinedFunctions()){
			if(f.getID().equals(name)){
				return f;
			}	
			
		}
		for (int i = 0; i <= getNumFunc()-1; i++) {
			if (getFunc(i).getID().equals(name)) {
				return getFunc(i);
			}
		}
		return UnknownFunc();
	}
	syn nta List<Func> Program.predefinedFunctions() {
		List<Func> list = new List<Func>();
		list.add(new Func("print",null,null));
		list.add(new Func("read",null,null));
		return list;
	}

	eq Program.getChild().lookup(String name, Object o) = unknownDecl();
	
	inh IdDecl Stat.lookup(String name, Object o);

	inh IdDecl IdDecl.lookup(String name, Object o);
	syn boolean IdDecl.isMultiplyDeclared() = lookup(getID(),null) != this;
}
